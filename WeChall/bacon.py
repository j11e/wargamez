code1 = ["BABAB", "AAAAB", "AABAA", "AAABB", "BAAAA", "BABBB", "ABABB", "AAAAB", "AAAAA", "BABBA", "ABAAB", "BBABB", "BAAAB", "BAAAA", "BBBAA", "BABAA", "BAABA", "AABAA", "BBBAA", "ABABA", "ABAAA", "AABAB", "BABAA", "BBAAA", "BBBAA", "BABBA", "BAAAB", "BBAAB", "ABBAA", "AAAAA", "AAABA", "ABAAA", "ABAAA", "BAAAB", "AAAAB", "BABBB", "BAAAA", "BBAAA", "BBBAA", "BAABA", "BABBA", "BAABA", "AAAAB", "AAAAA", "ABAAB", "AAAAB", "AABAA", "AABAA", "ABBBA", "ABABB", "ABABA", "AAAAB", "AAABB", "AAAAB", "AABBA", "AABBB", "ABAAA", "ABAAA", "ABBBA", "BBABA", "ABAAA", "ABAAA", "BAABA", "BABBA", "ABBAA", "BBAAB", "AAAAA", "AABAA", "BAAAA", "AAAAA", "AABBB", "BAABA", "ABAAA", "ABAAB", "AAABA", "BBAAB", "AABBA", "AAABB", "BAABA", "BAAAB", "AABBB", "BABBB", "AABAB", "ABAAA", "BABAA", "ABABA", "AABAB", "AAABA", "BABAB", "AAABA", "BABAA", "ABABA", "BABAB", "ABABA", "BAAAB", "ABABA", "BABAB", "AAABA", "BABAB", "ABABA", "AABAB", "ABAAA", "BABAB", "ABABA", "BABAA", "AAABA", "AAAAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABAAA", "BAAAB", "ABABA", "BABAA", "ABABA", "BABAB", "AAABA", "AABAB", "ABABA", "AABAB", "ABABA", "AABAA", "ABABA", "BABAB", "AAABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAA", "ABAAA", "BABAB", "ABABA", "AABAB", "ABABA", "BABAA", "ABAAA", "BABAB", "ABAAA", "BAAAB", "ABAAA", "BAAAB", "ABAAA", "BABAB", "ABABA", "BABAA", "ABAAA", "BABAB", "ABAAA", "BAAAB", "ABABA", "AABAA", "ABABA", "BABAB", "ABABA", "AABAA", "ABAAA", "BABAA", "ABAAA", "BABAB", "ABAAA", "BABAB", "ABAAA", "BAAAB", "ABAAA", "BABAB", "AAABA", "BABAA", "ABABA", "BABAA", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BAAAB", "ABABA", "BABAB", "AAABA", "BABAA", "ABABA", "BABAA", "ABAAA", "BABAB", "AAAAA", "AABAA", "ABABA", "BABAB", "ABABA", "BABAA", "ABAAA", "BABAB", "AAABA", "BABAB", "AAABA", "BABAA", "ABABA", "AABAB", "ABABA", "AAAAB", "ABABA", "AABAB", "ABABA", "BABAB", "ABABA", "BABAA", "ABABA", "BABAB", "ABAAA", "BABAB", "ABABA", "BAAAB", "ABABA", "BAAAA", "ABABA", "BAAAB", "ABABA", "BABAA", "ABABA", "BABAA", "ABAAA", "BABAB", "ABABA", "BABAB", "AAABA", "BABAA", "ABABA", "BAAAB", "ABABA", "AABAA", "ABABA", "BABAB", "ABABA", "BAAAB", "AAABA", "BABAB", "AAABA", "BABAA", "ABAAA", "BABAB", "AAABA", "BABAB", "ABAAA", "BAAAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "AAABA", "BABAB", "AAABA", "AABAB", "ABAAA", "BAAAB", "AAABA", "BAAAB", "ABABA", "AABAB", "AAABA", "BABAA", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAA", "AAABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAA", "ABABA", "BABAB", "AAABA", "AABAB", "ABABA", "BAAAB", "ABAAA", "BABAB", "AAABA", "BABAA", "ABABA", "BABAB", "ABABA", "BABAB", "AAAAA", "BABAA", "ABAAA", "BABAB", "ABAAA", "BABAA", "ABABA", "BABAB", "AAABA", "BAAAB", "ABABA", "BAAAB", "ABABA", "BAAAB", "ABABA", "BABAA", "ABABA", "BABAB", "ABABA", "BABAA", "ABABA", "BABAA", "ABABA", "BABAB", "ABABA", "BABAB", "ABAAA", "BAAAB", "ABAAA", "BABAB", "ABABA", "BAAAB", "ABABA", "AABAB", "AAABA", "AABAB", "ABABA", "AABAA", "ABABA", "BABAB", "ABABA", "BAAAB", "ABABA", "BABAA", "ABABA", "BABAA", "ABABA", "AABAB", "AAABA", "BABAB", "ABABA", "BABAB", "ABABA", "BAAAB", "ABABA", "BABAB", "ABABA", "BABAA", "ABAAA", "BABAB", "ABABA", "BABAB", "AAABA", "BABAA", "ABABA", "BAAAB", "AAABA", "BABAB", "ABABA"]

code2 = ["ABABA", "BBBBA", "BBABB", "BBBAA", "ABBBB", "ABAAA", "BABAA", "BBBBA", "BBBBB", "ABAAB", "BABBA", "AABAA", "ABBBA", "ABBBB", "AAABB", "ABABB", "ABBAB", "BBABB", "AAABB", "BABAB", "BABBB", "BBABA", "ABABB", "AABBB", "AAABB", "ABAAB", "ABBBA", "AABBA", "BAABB", "BBBBB", "BBBAB", "BABBB", "BABBB", "ABBBA", "BBBBA", "ABAAA", "ABBBB", "AABBB", "AAABB", "ABBAB", "ABAAB", "ABBAB", "BBBBA", "BBBBB", "BABBA", "BBBBA", "BBABB", "BBABB", "BAAAB", "BABAA", "BABAB", "BBBBA", "BBBAA", "BBBBA", "BBAAB", "BBAAA", "BABBB", "BABBB", "BAAAB", "AABAB", "BABBB", "BABBB", "ABBAB", "ABAAB", "BAABB", "AABBA", "BBBBB", "BBABB", "ABBBB", "BBBBB", "BBAAA", "ABBAB", "BABBB", "BABBA", "BBBAB", "AABBA", "BBAAB", "BBBAA", "ABBAB", "ABBBA", "BBAAA", "ABAAA", "BBABA", "BABBB", "ABABB", "BABAB", "BBABA", "BBBAB", "ABABA", "BBBAB", "ABABB", "BABAB", "ABABA", "BABAB", "ABBBA", "BABAB", "ABABA", "BBBAB", "ABABA", "BABAB", "BBABA", "BABBB", "ABABA", "BABAB", "ABABB", "BBBAB", "BBBBA", "BABAB", "ABABA", "BABAB", "ABABA", "BABBB", "ABBBA", "BABAB", "ABABB", "BABAB", "ABABA", "BBBAB", "BBABA", "BABAB", "BBABA", "BABAB", "BBABB", "BABAB", "ABABA", "BBBAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABB", "BABBB", "ABABA", "BABAB", "BBABA", "BABAB", "ABABB", "BABBB", "ABABA", "BABBB", "ABBBA", "BABBB", "ABBBA", "BABBB", "ABABA", "BABAB", "ABABB", "BABBB", "ABABA", "BABBB", "ABBBA", "BABAB", "BBABB", "BABAB", "ABABA", "BABAB", "BBABB", "BABBB", "ABABB", "BABBB", "ABABA", "BABBB", "ABABA", "BABBB", "ABBBA", "BABBB", "ABABA", "BBBAB", "ABABB", "BABAB", "ABABB", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABBBA", "BABAB", "ABABA", "BBBAB", "ABABB", "BABAB", "ABABB", "BABBB", "ABABA", "BBBBB", "BBABB", "BABAB", "ABABA", "BABAB", "ABABB", "BABBB", "ABABA", "BBBAB", "ABABA", "BBBAB", "ABABB", "BABAB", "BBABA", "BABAB", "BBBBA", "BABAB", "BBABA", "BABAB", "ABABA", "BABAB", "ABABB", "BABAB", "ABABA", "BABBB", "ABABA", "BABAB", "ABBBA", "BABAB", "ABBBB", "BABAB", "ABBBA", "BABAB", "ABABB", "BABAB", "ABABB", "BABBB", "ABABA", "BABAB", "ABABA", "BBBAB", "ABABB", "BABAB", "ABBBA", "BABAB", "BBABB", "BABAB", "ABABA", "BABAB", "ABBBA", "BBBAB", "ABABA", "BBBAB", "ABABB", "BABBB", "ABABA", "BBBAB", "ABABA", "BABBB", "ABBBA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BBBAB", "ABABA", "BBBAB", "BBABA", "BABBB", "ABBBA", "BBBAB", "ABBBA", "BABAB", "BBABA", "BBBAB", "ABABB", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABB", "BBBAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABABB", "BABAB", "ABABA", "BBBAB", "BBABA", "BABAB", "ABBBA", "BABBB", "ABABA", "BBBAB", "ABABB", "BABAB", "ABABA", "BABAB", "ABABA", "BBBBB", "ABABB", "BABBB", "ABABA", "BABBB", "ABABB", "BABAB", "ABABA", "BBBAB", "ABBBA", "BABAB", "ABBBA", "BABAB", "ABBBA", "BABAB", "ABABB", "BABAB", "ABABA", "BABAB", "ABABB", "BABAB", "ABABB", "BABAB", "ABABA", "BABAB", "ABABA", "BABBB", "ABBBA", "BABBB", "ABABA", "BABAB", "ABBBA", "BABAB", "BBABA", "BBBAB", "BBABA", "BABAB", "BBABB", "BABAB", "ABABA", "BABAB", "ABBBA", "BABAB", "ABABB", "BABAB", "ABABB", "BABAB", "BBABA", "BBBAB", "ABABA", "BABAB", "ABABA", "BABAB", "ABBBA", "BABAB", "ABABA", "BABAB", "ABABB", "BABBB", "ABABA", "BABAB", "ABABA", "BBBAB", "ABABB", "BABAB", "ABBBA", "BBBAB", "ABABA", "BABAB"]

translation = {
	"a":  "AAAAA",
	"g":    "AABBA",
	"n":  "ABBAA",
	"t":    "BAABA",
	"b":  "AAAAB",
	"h":    "AABBB",
	"o":  "ABBAB",
	"u":  	"BAABB",
	"c":  "AAABA",
	"i":	"ABAAA",
	"p":  "ABBBA",
	"w":    "BABAA",
	"d":  "AAABB",
	"k":    "ABAAB",
	"q":  "ABBBB",
	"x":    "BABAB",
	"e":  "AABAA",
	"l":    "ABABA",
	"r":  "BAAAA",
	"y":    "BABBA",
	"f":  "AABAB",
	"m":    "ABABB",
	"s":  "BAAAB",
	"z":    "BABBB"
}

translation = {v: k for k,v in translation.items()}

clear1 = ""
clear2 = ""

for pattern in code1:
	clear1 += pattern in translation and translation[pattern] or "X"

for pattern in code2:
	clear2 += pattern in translation and translation[pattern] or "X"

print(clear1)
print("_____")
print(clear2)